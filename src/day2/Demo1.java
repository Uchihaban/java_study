package day2;
/*函数的重载：
    在一个类中出现两个或者两个以上的同名函数，这个称作为函数的重载。
    同一个函数名可以出现不同的函数，以对应不同个数或者不同数据类型的参数
    
    重载要求：
     函数名不一致；
     形参列表不一致；形参的个数或者对应的数据类型不一致；
     与返回值类型无关；
 */

/*数组：数组是同一种类型数据的集合容器；
     数据类型[] 变量名 = new 数据类型[长度]; 
     int[] arr = new int[50];
     
     int[] arr： 声明了一个int类型的数组变量，变量名为arr
     int: 表明该数组容器只能存储int类型的数据；
     [] : 这是一个数组类型；
     arr: 变量名
     
     =：赋值运算符，=号是把数组对象的内存地址赋值给arr变量
     
     new int[50]：创建了一个长度为50的int类型的数组对象
     new： 创建数组对象的关键字
     int： 该数组对象只能存储int类型的数据
     []:  表示是数组类型
     50：   数组容量
     
    public class Demo1 {
	    public static void main(String[] args){
		    int[] arr = new int[50];
	}

}
  数组的好处：对分配到数组对象中的每一个数据都分配一个编号（索引值、角标、下标），
                     索引值范围0~长度-1
                     
 数组中常见的问题：
         1.NullPointerException 空指针异常
                        原因：引用类型变量（除基本数据类型以外的类型）没有指向任何对象，
                                  但是访问了对象的属性（如.length）或者是调用了对象的方法；
                        例如：int[] arr = new int[10];
               arr = null 
         2.ArrayIndexOutOfBoundsException 索引值越界
                        原因：访问了不存在的索引值
                        例如：int[] arr = new int[2];
               arr[1] = 10;
               System.out.println(arr[2]);
              
数组的初始化方式：
    动态初始化：
        数据类型[] 变量名 = new 数据类型[长度]；
    静态初始化：
        数据类型[] 变量名 = {元素1， 元素2...}； 
        
 如果数据已知，建议使用静态；数据未知，建议使用动态；
 内存图都是一样的；静态中，jvm帮你省略了。
 */

